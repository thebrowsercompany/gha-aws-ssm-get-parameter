on:
  pull_request:
  push:
  workflow_dispatch:

jobs:
  test:
    permissions:
      contents: read
      # required to make OIDC work
      id-token: write

    strategy:
      matrix:
        os: [ windows-latest, macos-latest, ubuntu-latest ]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Run this action
        uses: ./
        with:
          aws-role-to-assume: ${{ secrets.TEST_AWS_ROLE }}
          aws-role-session-name: AwsSsmGetParameterTest
          aws-ssm-parameter: ${{ secrets.TEST_AWS_SSM_PARAMETER }}
          save-to-filepath: ${{ github.workspace }}/aws-ssm-parameter.txt
          save-to-env-var: AWS_SSM_PARAMETER

      - name: Assert parameter was saved
        id: assert
        shell: bash
        run: |
          # Handle Windows path separators.
          OUTPUT_FILE=$(sed "s/\\\/\//g" <<< "${{ github.workspace }}/aws-ssm-parameter.txt")
          VAL_FROM_FILE=$(cat $OUTPUT_FILE)
          VAL_FROM_ENV="$AWS_SSM_PARAMETER"

          if [[ -z "$VAL_FROM_FILE" ]]; then
            echo "save-to-filepath failed"
            exit 1
          fi

          if [[ -z "$VAL_FROM_ENV" ]]; then
            echo "save-to-env-var failed"
            exit 1
          fi

          if [[ "$VAL_FROM_FILE" != "$VAL_FROM_ENV" ]]; then
            echo "parameter values do not match"
            exit 1
          fi

      - name: Cleanup parameter
        if: always()
        shell: bash
        run: rm -f ${{ github.workspace }}/aws-ssm-parameter.txt